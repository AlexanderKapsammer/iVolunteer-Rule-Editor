{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UniUser\\\\Desktop\\\\ReactPrototype\\\\rule_editor_prototype\\\\src\\\\formElements\\\\Conditions.js\";\nimport React from \"react\";\nimport SingleCondition from \"./SingleCondition\";\n\nclass Conditions extends React.Component {\n  render() {\n    const ruleConditions = this.props.ruleConditions.map(condition => {\n      return condition;\n    });\n    console.log(ruleConditions.length);\n    let singleConditions = [];\n\n    for (let i = 0; i < ruleConditions.length; i++) {\n      console.log(\"hello\");\n      singleConditions.push(React.createElement(SingleCondition, {\n        conditionType: this.props.ruleConditions[i].conditionType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n    }\n\n    console.log(singleConditions);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"#00ff00\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"achievement condition(s):\")), React.createElement(\"button\", {\n      onClick: this.props.onAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"add condition\"));\n  }\n\n}\n\nexport default Conditions;","map":{"version":3,"sources":["C:\\Users\\UniUser\\Desktop\\ReactPrototype\\rule_editor_prototype\\src\\formElements\\Conditions.js"],"names":["React","SingleCondition","Conditions","Component","render","ruleConditions","props","map","condition","console","log","length","singleConditions","i","push","conditionType","color","onAdd"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CACA;AACIC,EAAAA,MAAM,GACN;AACI,UAAMC,cAAc,GAAG,KAAKC,KAAL,CAAWD,cAAX,CAA0BE,GAA1B,CAClBC,SAAD,IAAe;AAAE,aAAOA,SAAP;AAAoB,KADlB,CAAvB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,cAAc,CAACM,MAA3B;AACA,QAAIC,gBAAgB,GAAG,EAAvB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,cAAc,CAACM,MAAnC,EAA2CE,CAAC,EAA5C,EACA;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAE,MAAAA,gBAAgB,CAACE,IAAjB,CACA,oBAAC,eAAD;AACI,QAAA,aAAa,EAAE,KAAKR,KAAL,CAAWD,cAAX,CAA0BQ,CAA1B,EAA6BE,aADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAKH;;AACDN,IAAAA,OAAO,CAACC,GAAR,CAAYE,gBAAZ;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ,EAMI;AAAQ,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,CADJ;AAYH;;AA/BL;;AAiCA,eAAef,UAAf","sourcesContent":["import React from \"react\";\r\nimport SingleCondition from \"./SingleCondition\";\r\n\r\nclass Conditions extends React.Component\r\n{\r\n    render()\r\n    {\r\n        const ruleConditions = this.props.ruleConditions.map(\r\n            (condition) => { return(condition); }\r\n        );\r\n        console.log(ruleConditions.length);\r\n        let singleConditions = [];\r\n        for (let i = 0; i < ruleConditions.length; i++)\r\n        {\r\n            console.log(\"hello\");\r\n            singleConditions.push(\r\n            <SingleCondition \r\n                conditionType={this.props.ruleConditions[i].conditionType}\r\n            />\r\n            );\r\n        }\r\n        console.log(singleConditions);\r\n\r\n        return(\r\n            <div>\r\n                <h2>\r\n                    <span style={{color: \"#00ff00\"}}>\r\n                        achievement condition(s):\r\n                    </span>\r\n                </h2>\r\n                <button onClick={this.props.onAdd}>\r\n                    add condition\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Conditions;"]},"metadata":{},"sourceType":"module"}