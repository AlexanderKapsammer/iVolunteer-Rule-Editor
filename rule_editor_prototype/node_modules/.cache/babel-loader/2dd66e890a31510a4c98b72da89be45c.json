{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\UniUser\\\\Desktop\\\\ReactPrototype\\\\rule_editor_prototype\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\UniUser\\\\Desktop\\\\ReactPrototype\\\\rule_editor_prototype\\\\src\\\\App.js\";\nimport React from \"react\";\nimport ConditionForm from \"./formElements/ConditionForm\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      ruleName: \"\",\n      ruleConditions: [{\n        conditionType: \"\",\n        conditionCount: \"1\",\n        conditionObject: \"-- select something --\"\n      }]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeInForm = this.handleChangeInForm.bind(this);\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n\n  handleChangeInForm(event) {\n    const _event$target2 = event.target,\n          name = _event$target2.name,\n          value = _event$target2.value;\n    this.setState(prevState => {\n      const newRuleConditions = _objectSpread({}, prevState.ruleConditions, {\n        [name]: value\n      });\n\n      return {\n        ruleConditions: newRuleConditions\n      };\n    });\n    console.log(\"hit end\");\n  }\n\n  addCondition() {}\n\n  removeCondition(id) {}\n\n  render() {\n    let preparedConditions = [];\n\n    for (let i = 0; i < this.state.ruleConditions.length; i++) {\n      preparedConditions.push(React.createElement(ConditionForm, {\n        key: i,\n        conditionType: this.state.ruleConditions[i].conditionType,\n        conditionCount: this.state.ruleConditions[i].conditionCount,\n        conditionObject: this.state.ruleConditions[i].conditionObject,\n        onRemove: this.state.removeCondition,\n        onChange: this.handleChangeInForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Ivolunteer rule editor prototype\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"#ff0000\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"rule name: \")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"ruleName\",\n      id: \"ruleNameTxt\",\n      placeholder: \"enter the name of your rule\",\n      type: \"text\",\n      value: this.state.ruleName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"#00ff00\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"achievement condition(s):\")), React.createElement(\"button\", {\n      name: \"addCondition\",\n      onClick: this.addCondition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"add condition\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), preparedConditions, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"create rule\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\UniUser\\Desktop\\ReactPrototype\\rule_editor_prototype\\src\\App.js"],"names":["React","ConditionForm","App","Component","constructor","state","ruleName","ruleConditions","conditionType","conditionCount","conditionObject","handleChange","bind","handleChangeInForm","event","target","name","value","setState","prevState","newRuleConditions","console","log","addCondition","removeCondition","id","render","preparedConditions","i","length","push","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ConditionForm from \"./formElements/ConditionForm\";\r\n\r\nclass App extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            ruleName: \"\",\r\n            ruleConditions: [\r\n                {\r\n                    conditionType: \"\",\r\n                    conditionCount: \"1\",\r\n                    conditionObject: \"-- select something --\"\r\n                }\r\n            ]\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeInForm = this.handleChangeInForm.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        const {name, value} = event.target;\r\n        this.setState(() => { return( {[name]: value} ); });\r\n    }\r\n    handleChangeInForm(event)\r\n    {\r\n        const {name, value} = event.target;\r\n        this.setState((prevState) => {\r\n            const newRuleConditions = {\r\n                ...prevState.ruleConditions,\r\n                [name]: value\r\n            };\r\n            return ({ruleConditions: newRuleConditions});\r\n        });\r\n        console.log(\"hit end\");\r\n    }\r\n\r\n    addCondition()\r\n    {\r\n\r\n    }\r\n    removeCondition(id)\r\n    {\r\n\r\n    }\r\n\r\n    render()\r\n    {\r\n        let preparedConditions = []\r\n        for (let i = 0; i < this.state.ruleConditions.length; i++)\r\n        {\r\n            preparedConditions.push(\r\n                <ConditionForm \r\n                    key={i} \r\n                    conditionType={this.state.ruleConditions[i].conditionType}\r\n                    conditionCount={this.state.ruleConditions[i].conditionCount}\r\n                    conditionObject={this.state.ruleConditions[i].conditionObject}\r\n                    onRemove={this.state.removeCondition}\r\n                    onChange={this.handleChangeInForm}\r\n                />\r\n            );\r\n        }\r\n\r\n\r\n        return(\r\n            <div>\r\n                <h1>Ivolunteer rule editor prototype</h1>\r\n                <hr />\r\n                <h2><span style={{color: \"#ff0000\"}}>rule name: </span></h2>\r\n                <h2>\r\n                    <input \r\n                        name=\"ruleName\"\r\n                        id=\"ruleNameTxt\" \r\n                        placeholder=\"enter the name of your rule\" \r\n                        type=\"text\" \r\n                        value={this.state.ruleName}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </h2>\r\n                <hr />\r\n                <h2><span style={{color: \"#00ff00\"}}>achievement condition(s):</span></h2>\r\n                <button \r\n                    name=\"addCondition\"\r\n                    onClick={this.addCondition}\r\n                    >\r\n                    add condition\r\n                </button>\r\n                <br />\r\n                <br />\r\n                {preparedConditions}\r\n                <hr />\r\n                <button>create rule</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}