{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UniUser\\\\Desktop\\\\ReactPrototype\\\\rule_editor_prototype\\\\src\\\\formElements\\\\Conditions.js\";\nimport React from \"react\";\nimport SingleCondition from \"./SingleCondition\";\n\nfunction Conditions(props) {\n  const ruleConditions = props.ruleConditions.map(condition => {\n    return condition;\n  });\n  let singleConditions = [];\n\n  for (let i = 0; i < ruleConditions.length; i++) {\n    singleConditions.push(React.createElement(SingleCondition, {\n      key: i,\n      conditionindex: i,\n      conditionType: props.ruleConditions[i].conditionType,\n      onChange: props.onConditionsChange,\n      onRemove: props.onSingleRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      color: \"#00ff00\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"achievement condition(s):\")), React.createElement(\"button\", {\n    onClick: props.onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"add condition\"), React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, singleConditions));\n}\n\nexport default Conditions;","map":{"version":3,"sources":["C:\\Users\\UniUser\\Desktop\\ReactPrototype\\rule_editor_prototype\\src\\formElements\\Conditions.js"],"names":["React","SingleCondition","Conditions","props","ruleConditions","map","condition","singleConditions","i","length","push","conditionType","onConditionsChange","onSingleRemove","color","onAdd"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EACA;AACI,QAAMC,cAAc,GAAGD,KAAK,CAACC,cAAN,CAAqBC,GAArB,CAClBC,SAAD,IAAe;AAAE,WAAOA,SAAP;AAAoB,GADlB,CAAvB;AAGA,MAAIC,gBAAgB,GAAG,EAAvB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAAc,CAACK,MAAnC,EAA2CD,CAAC,EAA5C,EACA;AACID,IAAAA,gBAAgB,CAACG,IAAjB,CACA,oBAAC,eAAD;AACI,MAAA,GAAG,EAAEF,CADT;AAEI,MAAA,cAAc,EAAEA,CAFpB;AAGI,MAAA,aAAa,EAAEL,KAAK,CAACC,cAAN,CAAqBI,CAArB,EAAwBG,aAH3C;AAII,MAAA,QAAQ,EAAER,KAAK,CAACS,kBAJpB;AAKI,MAAA,QAAQ,EAAET,KAAK,CAACU,cALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AASH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CADJ,EAMI;AAAQ,IAAA,OAAO,EAAEX,KAAK,CAACY,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,gBADL,CATJ,CADJ;AAeH;;AACD,eAAeL,UAAf","sourcesContent":["import React from \"react\";\r\nimport SingleCondition from \"./SingleCondition\";\r\n\r\nfunction Conditions(props)\r\n{\r\n    const ruleConditions = props.ruleConditions.map(\r\n        (condition) => { return(condition); }\r\n    );\r\n    let singleConditions = [];\r\n    for (let i = 0; i < ruleConditions.length; i++)\r\n    {\r\n        singleConditions.push(\r\n        <SingleCondition \r\n            key={i}\r\n            conditionindex={i}\r\n            conditionType={props.ruleConditions[i].conditionType}\r\n            onChange={props.onConditionsChange}\r\n            onRemove={props.onSingleRemove}\r\n        />\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2>\r\n                <span style={{color: \"#00ff00\"}}>\r\n                    achievement condition(s):\r\n                </span>\r\n            </h2>\r\n            <button onClick={props.onAdd}>\r\n                add condition\r\n            </button>\r\n            <ol>\r\n                {singleConditions}\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\nexport default Conditions;"]},"metadata":{},"sourceType":"module"}