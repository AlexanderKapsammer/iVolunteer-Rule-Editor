{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\UniUser\\\\Desktop\\\\ReactPrototype\\\\rule_editor_prototype\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\UniUser\\\\Desktop\\\\ReactPrototype\\\\rule_editor_prototype\\\\src\\\\App.js\";\nimport React from \"react\";\nimport ConditionForm from \"./formElements/ConditionForm\";\nimport RuleName from \"./formElements/RuleName\";\nimport Conditions from \"./formElements/Conditions\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      ruleName: \"\",\n      ruleConditions: [{\n        conditionType: \"\",\n        conditionCount: 1,\n        conditionObject: \"\"\n      }, {\n        conditionType: \"\",\n        conditionCount: 1,\n        conditionObject: \"hallo\"\n      }]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAddCondition = this.handleAddCondition.bind(this);\n    this.handleRemoveCondition = this.handleRemoveCondition.bind(this);\n    this.handleConditionsChange = this.handleConditionsChange.bind(this);\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n\n  handleAddCondition() {\n    let newRuleConditions = this.state.ruleConditions.slice();\n    newRuleConditions.push({\n      conditionType: \"\",\n      conditionCount: 1,\n      conditionObject: \"\"\n    });\n    this.setState({\n      ruleConditions: newRuleConditions\n    });\n  }\n\n  handleRemoveCondition(event) {\n    const conditionindex = event.target.getAttribute(\"conditionindex\");\n    let newRuleConditions = this.state.ruleConditions.slice();\n    newRuleConditions.splice(conditionindex, 1);\n    this.setState({\n      ruleConditions: newRuleConditions\n    });\n  }\n\n  handleConditionsChange(event) {\n    const _event$target2 = event.target,\n          name = _event$target2.name,\n          value = _event$target2.value;\n\n    if (name === \"conditionCount\" && value < 1) {\n      alert(\"The count must be at least 1!\");\n    } else {\n      console.log(\"run change\");\n      const conditionindex = event.target.getAttribute(\"conditionindex\");\n      let newRuleConditions = this.state.ruleConditions.slice();\n      newRuleConditions[conditionindex] = _objectSpread({}, newRuleConditions[conditionindex], {\n        [name]: value\n      });\n      this.setState({\n        ruleConditions: newRuleConditions\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Ivolunteer rule editor prototype\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(RuleName, {\n      value: this.state.ruleName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Conditions, {\n      onAdd: this.handleAddCondition,\n      ruleConditions: this.state.ruleConditions,\n      onConditionsChange: this.handleConditionsChange,\n      onSingleRemove: this.handleRemoveCondition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"create rule\"));\n  }\n\n}\n\nclass AppLegacy extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      ruleName: \"\",\n      ruleConditions: [{\n        conditionType: \"\",\n        conditionCount: \"1\",\n        conditionObject: \"-- select something --\"\n      }]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeInForm = this.handleChangeInForm.bind(this);\n  }\n\n  handleChange(event) {\n    const _event$target3 = event.target,\n          name = _event$target3.name,\n          value = _event$target3.value;\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n\n  handleChangeInForm(event) {\n    const _event$target4 = event.target,\n          name = _event$target4.name,\n          value = _event$target4.value,\n          formindex = _event$target4.formindex;\n    this.setState(prevState => {\n      let newRuleConditions = prevState.ruleConditions.slice();\n      console.log(name);\n      let condition = {\n        [name]: value\n      };\n      newRuleConditions[formindex] = condition;\n      console.log(prevState);\n      console.log({\n        ruleConditions: newRuleConditions\n      });\n      return {\n        ruleConditions: newRuleConditions\n      };\n    });\n    console.log(\"hit end\");\n  }\n\n  addCondition() {}\n\n  removeCondition(id) {}\n\n  render() {\n    let preparedConditions = [];\n\n    for (let i = 0; i < this.state.ruleConditions.length; i++) {\n      preparedConditions.push(React.createElement(ConditionForm, {\n        key: i,\n        formindex: i,\n        conditionType: this.state.ruleConditions[i].conditionType,\n        conditionCount: this.state.ruleConditions[i].conditionCount,\n        conditionObject: this.state.ruleConditions[i].conditionObject,\n        onRemove: this.state.removeCondition,\n        onChange: this.handleChangeInForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Ivolunteer rule editor prototype\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"#ff0000\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"rule name: \")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"ruleName\",\n      id: \"ruleNameTxt\",\n      placeholder: \"enter the name of your rule\",\n      type: \"text\",\n      value: this.state.ruleName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"#00ff00\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"achievement condition(s):\")), React.createElement(\"button\", {\n      name: \"addCondition\",\n      onClick: this.addCondition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"add condition\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), preparedConditions, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"create rule\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\UniUser\\Desktop\\ReactPrototype\\rule_editor_prototype\\src\\App.js"],"names":["React","ConditionForm","RuleName","Conditions","App","Component","constructor","state","ruleName","ruleConditions","conditionType","conditionCount","conditionObject","handleChange","bind","handleAddCondition","handleRemoveCondition","handleConditionsChange","event","target","name","value","setState","newRuleConditions","slice","push","conditionindex","getAttribute","splice","alert","console","log","render","AppLegacy","handleChangeInForm","formindex","prevState","condition","addCondition","removeCondition","id","preparedConditions","i","length","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ConditionForm from \"./formElements/ConditionForm\";\r\nimport RuleName from \"./formElements/RuleName\";\r\nimport Conditions from \"./formElements/Conditions\";\r\n\r\nclass App extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            ruleName: \"\",\r\n            ruleConditions: [\r\n                {\r\n                    conditionType: \"\",\r\n                    conditionCount: 1,\r\n                    conditionObject: \"\"\r\n                },\r\n                {\r\n                    conditionType: \"\",\r\n                    conditionCount: 1,\r\n                    conditionObject: \"hallo\"\r\n                }\r\n            ]\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleAddCondition = this.handleAddCondition.bind(this);\r\n        this.handleRemoveCondition = this.handleRemoveCondition.bind(this);\r\n        this.handleConditionsChange = this.handleConditionsChange.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        const{name, value} = event.target;\r\n        this.setState(() => { return( {[name]: value} ); });\r\n    }\r\n    handleAddCondition()\r\n    {\r\n        let newRuleConditions = this.state.ruleConditions.slice();\r\n        newRuleConditions.push( {\r\n            conditionType: \"\",\r\n            conditionCount: 1,\r\n            conditionObject: \"\"\r\n        } );\r\n        this.setState({ruleConditions: newRuleConditions})\r\n    }\r\n    handleRemoveCondition(event)\r\n    {\r\n        const conditionindex = event.target.getAttribute(\"conditionindex\");\r\n        let newRuleConditions = this.state.ruleConditions.slice();\r\n        newRuleConditions.splice(conditionindex, 1);\r\n        this.setState({ruleConditions: newRuleConditions});\r\n    }\r\n    handleConditionsChange(event)\r\n    {\r\n        const{name, value} = event.target;\r\n        if(name === \"conditionCount\" && value < 1)\r\n        {\r\n            alert(\"The count must be at least 1!\")\r\n        }\r\n        else\r\n        {\r\n            console.log(\"run change\");\r\n            const conditionindex = event.target.getAttribute(\"conditionindex\");\r\n            let newRuleConditions = this.state.ruleConditions.slice();\r\n            newRuleConditions[conditionindex] = {\r\n                ...newRuleConditions[conditionindex],\r\n                [name]: value\r\n            }\r\n            this.setState({ruleConditions: newRuleConditions});\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <h1>Ivolunteer rule editor prototype</h1>\r\n                <hr />\r\n                <RuleName value={this.state.ruleName} onChange={this.handleChange}/>\r\n                <hr />\r\n                <Conditions \r\n                    onAdd={this.handleAddCondition} \r\n                    ruleConditions={this.state.ruleConditions}\r\n                    onConditionsChange={this.handleConditionsChange}\r\n                    onSingleRemove={this.handleRemoveCondition}\r\n                />\r\n                <hr />\r\n                <button>create rule</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass AppLegacy extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            ruleName: \"\",\r\n            ruleConditions: [\r\n                {\r\n                    conditionType: \"\",\r\n                    conditionCount: \"1\",\r\n                    conditionObject: \"-- select something --\"\r\n                }\r\n            ]\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeInForm = this.handleChangeInForm.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        const {name, value} = event.target;\r\n        this.setState(() => { return( {[name]: value} ); });\r\n    }\r\n    handleChangeInForm(event)\r\n    {\r\n        const {name, value, formindex} = event.target;\r\n        this.setState((prevState) => {\r\n            let newRuleConditions = prevState.ruleConditions.slice();\r\n            console.log(name);\r\n            let condition = {\r\n                [name]: value\r\n            }\r\n            newRuleConditions[formindex] = condition;\r\n\r\n            console.log(prevState);\r\n            console.log({ruleConditions: newRuleConditions});\r\n\r\n            return ({ruleConditions: newRuleConditions});\r\n        });\r\n        console.log(\"hit end\");\r\n    }\r\n\r\n    addCondition()\r\n    {\r\n\r\n    }\r\n    removeCondition(id)\r\n    {\r\n\r\n    }\r\n\r\n    render()\r\n    {\r\n        let preparedConditions = []\r\n        for (let i = 0; i < this.state.ruleConditions.length; i++)\r\n        {\r\n            preparedConditions.push(\r\n                <ConditionForm \r\n                    key={i} \r\n                    formindex={i}\r\n                    conditionType={this.state.ruleConditions[i].conditionType}\r\n                    conditionCount={this.state.ruleConditions[i].conditionCount}\r\n                    conditionObject={this.state.ruleConditions[i].conditionObject}\r\n                    onRemove={this.state.removeCondition}\r\n                    onChange={this.handleChangeInForm}\r\n                />\r\n            );\r\n        }\r\n\r\n\r\n        return(\r\n            <div>\r\n                <h1>Ivolunteer rule editor prototype</h1>\r\n                <hr />\r\n                <h2><span style={{color: \"#ff0000\"}}>rule name: </span></h2>\r\n                <h2>\r\n                    <input \r\n                        name=\"ruleName\"\r\n                        id=\"ruleNameTxt\" \r\n                        placeholder=\"enter the name of your rule\" \r\n                        type=\"text\" \r\n                        value={this.state.ruleName}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </h2>\r\n                <hr />\r\n                <h2><span style={{color: \"#00ff00\"}}>achievement condition(s):</span></h2>\r\n                <button \r\n                    name=\"addCondition\"\r\n                    onClick={this.addCondition}\r\n                    >\r\n                    add condition\r\n                </button>\r\n                <br />\r\n                <br />\r\n                {preparedConditions}\r\n                <hr />\r\n                <button>create rule</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}